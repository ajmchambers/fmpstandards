/*******************************************************************************
 * UUIDTimestamp
 *
 * Creates a universally unique identifier suitable for use as a primary key in
 * FileMaker number fields. The UUID is an encoding of the creation timestamp
 * (UTC), a serial number, and random numbers. This may be useful in some
 * situations to preserve the anonymity of the device that generated the UUID.
 * The values returned by this and related functions have a one-to-one
 * correspondence with UUIDs following the RFC 4122 standard all values in the
 * format generated by this function can be converted to RFC 4122, and vice
 * versa.
 *
 * This function generates UUIDs that are meaningfully sortable. Values sort by
 * version, then approximate creation order. Because of the leading sort by
 * version, random (version 4) values (where the creation order cannot be
 * determined by the values) will cluster separately from timestamp-node
 * (version 1) values.
 *
 * The value can be converted to RFC 4122 canonical form (hexadecimal) with the
 * UUIDGetAsRFC4122 function. The creation timestamp can be extracted with the
 * UUIDGetTimestamp function.
 *
 * @return A 41-digit number of the form:
 *		vrttttttttttttssssssscccccnnnnnnnnnnnnnnn
 *		The sections of the UUID correspond to:
 *		v: A UUID version (type) number
 *		r: A variant code reserved by the RFC 4122 standard
 *		t: The creation timestamp (seconds since 0001-01-01T00:00:00)
 *		s: A serial number, reset for each second
 *		c: A session key, randomly generated for each session
 *		n: The randomly-generated "node" for a session
 *
 * @global $$~UUID.DATA[2]
 *
 * @history 2012-02-25 - Jeremy Bante <http://scr.im/jbante> - Created
 * @history 2013-12-13 - Jeremy Bante <http://scr.im/jbante> - Generate ~serial
 * number values that result in easier-to-read timestamps from the
 * UUIDGetTimestamp function.
 * @history 2013-12-13 - Jeremy Bante <http://scr.im/jbante> - Using new
 * Get ( CurrentTimeUTCMilliseconds ) function in FileMaker 13.
 *
 * @see http://filemakerstandards.org/pages/viewpage.action?pageId=557138 Key values best practice
 * @see http://tools.ietf.org/html/rfc4122 RFC 4122 standard UUID specification
 ******************************************************************************/

Let ( [
	// Set-up timestamp, serial number, and session key
	~session = GetValue ( $$~UUID.DATA[2] ; 1 ) ;
	~lastTimestamp = GetValue ( $$~UUID.DATA[2] ; 2 ) ;
	~serial = GetAsNumber ( GetValue ( $$~UUID.DATA[2] ; 3 ) ) ;
	~node = GetValue ( $$~UUID.DATA[2] ; 4 ) ;

	~now = Mod ( Get ( CurrentTimeUTCMilliseconds ) ; 165208454460000 ) ;
	~session =
		Case (
			IsEmpty ( ~session ) ;	// new session
				Floor ( Random * 16384 ) ;

			~serial ≥ .9999	// serial number overflow
			and ~now = ~lastTimestamp
			or ~now < ~lastTimestamp ;	// clock change
				Mod ( ~session + 1 ; 16384 ) ;

			/* Else */
				~session
		) ;
	~magnitude =
		Max (
			Left ( Substitute ( ~serial ; "." ; "" ) ; 1 ) ;
			1
		) ;
	~serial =
		Case (
			~now ≠ ~lastTimestamp or ~serial = .9999 ; 0 ;
			~serial = 0 ; .1 ;
			~serial < .4 ; ~serial + 10 ^ ( 0 - ~magnitude ) ;
			/* Else */ ~serial + 10 ^ -4
		) ;
	~node =
		If ( ~node ;
			~node ;
		/* Else, new random node */
			// set multicast bit to avoid colliding with NIC addresses
			( Floor ( Random * 128 ) * 2 + 1 ) * 1099511627776
			+ Floor ( Random * 1099511627776 )
		) ;

	// Store data for future reference
	$$~UUID.DATA[2] = List ( ~session ; ~now ; ~serial ; ~node )
] ;
	// v-r-tttt tttt tttt-sss ssss-ccccc-nnnnn nnnnn nnnnn
	"12" //version and reserved variant code
	// "1-2-"
	& Right ( "000000000000" & ~now ; 12 )
	// & "-"
	& Left ( Substitute ( ~serial ; "." ; "" ) & "0000000" ; 7 )
	// & "-"
	& Right ( "00000" & ~session ; 5 )
	// & "-"
	& Right ( "000000000000000" & ~node ; 15 )
)